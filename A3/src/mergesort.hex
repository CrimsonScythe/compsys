00000000 :                       #  read_long:
00000000 :                       #  .LFB0:
00000000 : 517008000000          #      subq $8, %rsp
00000006 : 39B7                  #      movq %r11, (%rsp)
00000008 : A4B000000010          #      leaq 268435456, %r11
0000000e : 310B                  #      movq (%r11), %rax
00000010 : 31B7                  #      movq (%rsp), %r11
00000012 : 507008000000          #      addq $8, %rsp
00000018 : 000B                  #      ret %r11
0000001a :                       #  gen_random:
0000001a :                       #  .LFB1:
0000001a : 517008000000          #      subq $8, %rsp
00000020 : 39B7                  #      movq %r11, (%rsp)
00000022 : A4B001000010          #      leaq 268435457, %r11
00000028 : 310B                  #      movq (%r11), %rax
0000002a : 31B7                  #      movq (%rsp), %r11
0000002c : 507008000000          #      addq $8, %rsp
00000032 : 000B                  #      ret %r11
00000034 :                       #  write_long:
00000034 :                       #  .LFB2:
00000034 : 517008000000          #      subq $8, %rsp
0000003a : 39B7                  #      movq %r11, (%rsp)
0000003c : A4B002000010          #      leaq 268435458, %r11
00000042 : 396B                  #      movq %rdi, (%r11)
00000044 : 31B7                  #      movq (%rsp), %r11
00000046 : 507008000000          #      addq $8, %rsp
0000004c : 000B                  #      ret %r11
0000004e :                       #  get_argc:
0000004e :                       #  .LFB3:
0000004e : 517008000000          #      subq $8, %rsp
00000054 : 39B7                  #      movq %r11, (%rsp)
00000056 : A4B000000020          #      leaq 536870912, %r11
0000005c : 310B                  #      movq (%r11), %rax
0000005e : 31B7                  #      movq (%rsp), %r11
00000060 : 507008000000          #      addq $8, %rsp
00000066 : 000B                  #      ret %r11
00000068 :                       #  get_argv:
00000068 :                       #  .LFB4:
00000068 : 517008000000          #      subq $8, %rsp
0000006e : 39B7                  #      movq %r11, (%rsp)
00000070 : 640008000020          #      movq $536870920, %eax
00000076 : 31B7                  #      movq (%rsp), %r11
00000078 : 507008000000          #      addq $8, %rsp
0000007e : 000B                  #      ret %r11
00000080 :                       #  print_array:
00000080 :                       #  .LFB7:
00000080 : 517020000000          #      subq $32, %rsp
00000086 : 7DB718000000          #      movq %r11, 24(%rsp)
0000008c : 7DC710000000          #      movq %r12, 16(%rsp)
00000092 : 7D4708000000          #      movq %rbp, 8(%rsp)
00000098 : 3917                  #      movq %rbx, (%rsp)
0000009a : 2146                  #      movq %rdi, %rbp
0000009c : 21C5                  #      movq %rsi, %r12
0000009e : 641000000000          #      movq $0, %ebx
000000a4 : 4F00bb000000          #      jmp .L7
000000aa :                       #  .L8:
000000aa : 93BC13                #      leaq (%r12, %rbx, 8), %r11
000000ad : 316B                  #      movq (%r11), %rdi
000000af : 4EB034000000          #      call write_long, %r11
000000b5 : 501001000000          #      addq $1, %rbx
000000bb :                       #  .L7:
000000bb : 4614aa000000          #      cbg %rbp, %rbx, .L8
000000c1 : 3117                  #      movq (%rsp), %rbx
000000c3 : 754708000000          #      movq 8(%rsp), %rbp
000000c9 : 75C710000000          #      movq 16(%rsp), %r12
000000cf : 75B718000000          #      movq 24(%rsp), %r11
000000d5 : 507020000000          #      addq $32, %rsp
000000db : 000B                  #      ret %r11
000000dd :                       #  init_allocator:
000000dd :                       #  .LFB8:
000000dd : 517008000000          #      subq $8, %rsp
000000e3 : 39B7                  #      movq %r11, (%rsp)
000000e5 : A4B088040000          #      leaq cur_allocator, %r11
000000eb : 64A000000030          #      movq $805306368, %r10
000000f1 : 39AB                  #      movq %r10, (%r11)
000000f3 : 31B7                  #      movq (%rsp), %r11
000000f5 : 507008000000          #      addq $8, %rsp
000000fb : 000B                  #      ret %r11
000000fd :                       #  allocate:
000000fd :                       #  .LFB9:
000000fd : 517008000000          #      subq $8, %rsp
00000103 : 39B7                  #      movq %r11, (%rsp)
00000105 : A4B088040000          #      leaq cur_allocator, %r11
0000010b : 310B                  #      movq (%r11), %rax
0000010d : 933063                #      leaq (%rax, %rdi, 8), %rdx
00000110 : A4B088040000          #      leaq cur_allocator, %r11
00000116 : 393B                  #      movq %rdx, (%r11)
00000118 : 31B7                  #      movq (%rsp), %r11
0000011a : 507008000000          #      addq $8, %rsp
00000120 : 000B                  #      ret %r11
00000122 :                       #  get_random_array:
00000122 :                       #  .LFB5:
00000122 : 517028000000          #      subq $40, %rsp
00000128 : 7DB720000000          #      movq %r11, 32(%rsp)
0000012e : 7DD718000000          #      movq %r13, 24(%rsp)
00000134 : 7DC710000000          #      movq %r12, 16(%rsp)
0000013a : 7D4708000000          #      movq %rbp, 8(%rsp)
00000140 : 3917                  #      movq %rbx, (%rsp)
00000142 : 21C6                  #      movq %rdi, %r12
00000144 : 4EB0fd000000          #      call allocate, %r11
0000014a : 21D0                  #      movq %rax, %r13
0000014c : 641000000000          #      movq $0, %ebx
00000152 : 4F0077010000          #      jmp .L13
00000158 :                       #  .L14:
00000158 : B74D1300000000        #      leaq 0(%r13, %rbx, 8), %rbp
0000015f : 640000000000          #      movq $0, %eax
00000165 : 4EB01a000000          #      call gen_random, %r11
0000016b : 7D0400000000          #      movq %rax, 0(%rbp)
00000171 : 501001000000          #      addq $1, %rbx
00000177 :                       #  .L13:
00000177 : 461C58010000          #      cbg %r12, %rbx, .L14
0000017d : 210D                  #      movq %r13, %rax
0000017f : 3117                  #      movq (%rsp), %rbx
00000181 : 754708000000          #      movq 8(%rsp), %rbp
00000187 : 75C710000000          #      movq 16(%rsp), %r12
0000018d : 75D718000000          #      movq 24(%rsp), %r13
00000193 : 75B720000000          #      movq 32(%rsp), %r11
00000199 : 507028000000          #      addq $40, %rsp
0000019f : 000B                  #      ret %r11
000001a1 :                       #  read_array:
000001a1 :                       #  .LFB6:
000001a1 : 517028000000          #      subq $40, %rsp
000001a7 : 7DB720000000          #      movq %r11, 32(%rsp)
000001ad : 7DD718000000          #      movq %r13, 24(%rsp)
000001b3 : 7DC710000000          #      movq %r12, 16(%rsp)
000001b9 : 7D4708000000          #      movq %rbp, 8(%rsp)
000001bf : 3917                  #      movq %rbx, (%rsp)
000001c1 : 21C6                  #      movq %rdi, %r12
000001c3 : 4EB0fd000000          #      call allocate, %r11
000001c9 : 21D0                  #      movq %rax, %r13
000001cb : 641000000000          #      movq $0, %ebx
000001d1 : 4F00f6010000          #      jmp .L17
000001d7 :                       #  .L18:
000001d7 : B74D1300000000        #      leaq 0(%r13, %rbx, 8), %rbp
000001de : 640000000000          #      movq $0, %eax
000001e4 : 4EB000000000          #      call read_long, %r11
000001ea : 7D0400000000          #      movq %rax, 0(%rbp)
000001f0 : 501001000000          #      addq $1, %rbx
000001f6 :                       #  .L17:
000001f6 : 461Cd7010000          #      cbg %r12, %rbx, .L18
000001fc : 210D                  #      movq %r13, %rax
000001fe : 3117                  #      movq (%rsp), %rbx
00000200 : 754708000000          #      movq 8(%rsp), %rbp
00000206 : 75C710000000          #      movq 16(%rsp), %r12
0000020c : 75D718000000          #      movq 24(%rsp), %r13
00000212 : 75B720000000          #      movq 32(%rsp), %r11
00000218 : 507028000000          #      addq $40, %rsp
0000021e : 000B                  #      ret %r11
00000220 :                       #  merge_runs:
00000220 :                       #  .LFB11:
00000220 : 517008000000          #      subq $8, %rsp
00000226 : 39B7                  #      movq %r11, (%rsp)
00000228 : F0600000000014030000  #      cbe $0, %rdi, .L34
00000232 : 517020000000          #      subq $32, %rsp
00000238 : 7DD718000000          #      movq %r13, 24(%rsp)
0000023e : 7DC710000000          #      movq %r12, 16(%rsp)
00000244 : 7D4708000000          #      movq %rbp, 8(%rsp)
0000024a : 3917                  #      movq %rbx, (%rsp)
0000024c : 4F00cd020000          #      jmp .L29
00000252 :                       #  .L30:
00000252 : 2115                  #      movq %rsi, %rbx
00000254 : 4F00da020000          #      jmp .L22
0000025a :                       #  .L26:
0000025a : 508008000000          #      addq $8, %r8
00000260 : 39C0                  #      movq %r12, (%rax)
00000262 : 4F0082020000          #      jmp .L27
00000268 :                       #  .L25:
00000268 : 31C9                  #      movq (%r9), %r12
0000026a : 39C0                  #      movq %r12, (%rax)
0000026c : A59908000000          #      leaq 8(%r9), %r9
00000272 : 4F0082020000          #      jmp .L27
00000278 :                       #  .L24:
00000278 : 31D8                  #      movq (%r8), %r13
0000027a : 39D0                  #      movq %r13, (%rax)
0000027c : A58808000000          #      leaq 8(%r8), %r8
00000282 :                       #  .L27:
00000282 : 500008000000          #      addq $8, %rax
00000288 :                       #  .L23:
00000288 : 49B0b2020000          #      cbae %rax, %r11, .L35
0000028e : 49A978020000          #      cbae %r9, %r10, .L24
00000294 : 494868020000          #      cbae %r8, %rbp, .L25
0000029a : 31D9                  #      movq (%r9), %r13
0000029c : 31C8                  #      movq (%r8), %r12
0000029e : 45DC5a020000          #      cble %r12, %r13, .L26
000002a4 : 509008000000          #      addq $8, %r9
000002aa : 39D0                  #      movq %r13, (%rax)
000002ac : 4F0082020000          #      jmp .L27
000002b2 :                       #  .L35:
000002b2 : 930510                #      leaq (%rsi, %rbx, 1), %rax
000002b5 : 570003000000          #      salq $3, %rax
000002bb : 1030                  #      addq %rax, %rdx
000002bd : 1020                  #      addq %rax, %rcx
000002bf : 1165                  #      subq %rsi, %rdi
000002c1 : 1161                  #      subq %rbx, %rdi
000002c3 : F06000000000f2020000  #      cbe $0, %rdi, .L36
000002cd :                       #  .L29:
000002cd : 930550                #      leaq (%rsi, %rsi, 1), %rax
000002d0 : 470652020000          #      cbge %rdi, %rax, .L30
000002d6 : 2116                  #      movq %rdi, %rbx
000002d8 : 1115                  #      subq %rsi, %rbx
000002da :                       #  .L22:
000002da : 93A353                #      leaq (%rdx, %rsi, 8), %r10
000002dd : 934A13                #      leaq (%r10, %rbx, 8), %rbp
000002e0 : 930510                #      leaq (%rsi, %rbx, 1), %rax
000002e3 : 93B203                #      leaq (%rcx, %rax, 8), %r11
000002e6 : 2102                  #      movq %rcx, %rax
000002e8 : 218A                  #      movq %r10, %r8
000002ea : 2193                  #      movq %rdx, %r9
000002ec : 4F0088020000          #      jmp .L23
000002f2 :                       #  .L36:
000002f2 : 3117                  #      movq (%rsp), %rbx
000002f4 : 754708000000          #      movq 8(%rsp), %rbp
000002fa : 75C710000000          #      movq 16(%rsp), %r12
00000300 : 75D718000000          #      movq 24(%rsp), %r13
00000306 : 75B720000000          #      movq 32(%rsp), %r11
0000030c : 507028000000          #      addq $40, %rsp
00000312 : 000B                  #      ret %r11
00000314 :                       #  .L34:
00000314 : 31B7                  #      movq (%rsp), %r11
00000316 : 507008000000          #      addq $8, %rsp
0000031c : 000B                  #      ret %r11
0000031e :                       #  merge_sort:
0000031e :                       #  .LFB12:
0000031e : 517030000000          #      subq $48, %rsp
00000324 : 7DB728000000          #      movq %r11, 40(%rsp)
0000032a : 7DE720000000          #      movq %r14, 32(%rsp)
00000330 : 7DD718000000          #      movq %r13, 24(%rsp)
00000336 : 7DC710000000          #      movq %r12, 16(%rsp)
0000033c : 7D4708000000          #      movq %rbp, 8(%rsp)
00000342 : 3917                  #      movq %rbx, (%rsp)
00000344 : 21C6                  #      movq %rdi, %r12
00000346 : 21E5                  #      movq %rsi, %r14
00000348 : 4EB0fd000000          #      call allocate, %r11
0000034e : 21D0                  #      movq %rax, %r13
00000350 : 214E                  #      movq %r14, %rbp
00000352 : 641001000000          #      movq $1, %ebx
00000358 : 4F0074030000          #      jmp .L38
0000035e :                       #  .L39:
0000035e : 212D                  #      movq %r13, %rcx
00000360 : 2134                  #      movq %rbp, %rdx
00000362 : 2151                  #      movq %rbx, %rsi
00000364 : 216C                  #      movq %r12, %rdi
00000366 : 4EB020020000          #      call merge_runs, %r11
0000036c : 1011                  #      addq %rbx, %rbx
0000036e : 2104                  #      movq %rbp, %rax
00000370 : 214D                  #      movq %r13, %rbp
00000372 : 21D0                  #      movq %rax, %r13
00000374 :                       #  .L38:
00000374 : 461C5e030000          #      cbg %r12, %rbx, .L39
0000037a : 404Ea6030000          #      cbe %r14, %rbp, .L37
00000380 : 640000000000          #      movq $0, %eax
00000386 : 4F00a0030000          #      jmp .L40
0000038c :                       #  .L42:
0000038c : B7B40300000000        #      leaq 0(%rbp, %rax, 8), %r11
00000393 : 313B                  #      movq (%r11), %rdx
00000395 : 93BE03                #      leaq (%r14, %rax, 8), %r11
00000398 : 393B                  #      movq %rdx, (%r11)
0000039a : 500001000000          #      addq $1, %rax
000003a0 :                       #  .L40:
000003a0 : 460C8c030000          #      cbg %r12, %rax, .L42
000003a6 :                       #  .L37:
000003a6 : 3117                  #      movq (%rsp), %rbx
000003a8 : 754708000000          #      movq 8(%rsp), %rbp
000003ae : 75C710000000          #      movq 16(%rsp), %r12
000003b4 : 75D718000000          #      movq 24(%rsp), %r13
000003ba : 75E720000000          #      movq 32(%rsp), %r14
000003c0 : 75B728000000          #      movq 40(%rsp), %r11
000003c6 : 507030000000          #      addq $48, %rsp
000003cc : 000B                  #      ret %r11
000003ce :                       #  run:
000003ce :                       #  .LFB13:
000003ce : 517020000000          #      subq $32, %rsp
000003d4 : 7DB718000000          #      movq %r11, 24(%rsp)
000003da : 7DC710000000          #      movq %r12, 16(%rsp)
000003e0 : 7D4708000000          #      movq %rbp, 8(%rsp)
000003e6 : 3917                  #      movq %rbx, (%rsp)
000003e8 : 640000000000          #      movq $0, %eax
000003ee : 4EB0dd000000          #      call init_allocator, %r11
000003f4 : 640000000000          #      movq $0, %eax
000003fa : 4EB000000000          #      call read_long, %r11
00000400 : 21C0                  #      movq %rax, %r12
00000402 : 52C001000000          #      andq $1, %r12d
00000408 : 520002000000          #      andq $2, %eax
0000040e : 2110                  #      movq %rax, %rbx
00000410 : 640000000000          #      movq $0, %eax
00000416 : 4EB000000000          #      call read_long, %r11
0000041c : 2140                  #      movq %rax, %rbp
0000041e : F0100000000064040000  #      cbe $0, %rbx, .L46
00000428 : 2160                  #      movq %rax, %rdi
0000042a : 4EB0a1010000          #      call read_array, %r11
00000430 : 2110                  #      movq %rax, %rbx
00000432 :                       #  .L47:
00000432 : 2151                  #      movq %rbx, %rsi
00000434 : 2164                  #      movq %rbp, %rdi
00000436 : 4EB01e030000          #      call merge_sort, %r11
0000043c : F1C00000000074040000  #      cbne $0, %r12, .L50
00000446 :                       #  .L45:
00000446 : 2101                  #      movq %rbx, %rax
00000448 : 3117                  #      movq (%rsp), %rbx
0000044a : 754708000000          #      movq 8(%rsp), %rbp
00000450 : 75C710000000          #      movq 16(%rsp), %r12
00000456 : 75B718000000          #      movq 24(%rsp), %r11
0000045c : 507020000000          #      addq $32, %rsp
00000462 : 000B                  #      ret %r11
00000464 :                       #  .L46:
00000464 : 2160                  #      movq %rax, %rdi
00000466 : 4EB022010000          #      call get_random_array, %r11
0000046c : 2110                  #      movq %rax, %rbx
0000046e : 4F0032040000          #      jmp .L47
00000474 :                       #  .L50:
00000474 : 2151                  #      movq %rbx, %rsi
00000476 : 2164                  #      movq %rbp, %rdi
00000478 : 4EB080000000          #      call print_array, %r11
0000047e : 4F0046040000          #      jmp .L45
00000484 :                       #  .LFE0:
00000484 :                       #  .LFE1:
00000484 :                       #  .LFE2:
00000484 :                       #  .LFE3:
00000484 :                       #  .LFE4:
00000484 :                       #  .LFE7:
00000484 :                       #  .LFE8:
00000484 :                       #  .LFE9:
00000484 :                       #  .LFE5:
00000484 :                       #  .LFE6:
00000484 :                       #  .LFE11:
00000484 :                       #  .LFE12:
00000484 :                       #  .LFE13:
00000488 : 0000000000000000      #      .comm cur_allocator,8,8
